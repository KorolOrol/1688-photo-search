document.addEventListener('DOMContentLoaded', function() {
    const registerForm = document.querySelector('form');
    const nameInput = document.getElementById('name');
    const passwordInput = document.getElementById('password');
    const submitButton = registerForm.querySelector('button[type="submit"]');
  
    // –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ –æ—à–∏–±–∫–∏
    function showError(message) {
        // –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –æ—à–∏–±–∫–∏
        const existingError = document.querySelector('.error-message');
        if (existingError) existingError.remove();
  
        // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç –æ—à–∏–±–∫–∏
        const errorElement = document.createElement('div');
        errorElement.classList.add('error-message');
        errorElement.style.cssText = `
            color: red;
            background-color: #ffeeee;
            padding: 10px;
            border-radius: 5px;
            margin-bottom: 15px;
            width: 100%;
            text-align: center;
        `;
        errorElement.textContent = message;
  
        // –í—Å—Ç–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–¥ —Ñ–æ—Ä–º–æ–π
        registerForm.insertBefore(errorElement, registerForm.firstChild);
    }
  
    // –£–ª—É—á—à–µ–Ω–Ω–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è
    function validateInputs() {
        const username = nameInput.value.trim();
        const password = passwordInput.value;
  
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–∏–Ω–∞
        if (username.length < 3) {
            showError('–õ–æ–≥–∏–Ω –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–µ –∫–æ—Ä–æ—á–µ 3 —Å–∏–º–≤–æ–ª–æ–≤');
            return false;
        }
  
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –ø–∞—Ä–æ–ª—è
        const passwordRegex = /^(?=.*[A-Za-z])(?=.*\d)[A-Za-z\d]{6,}$/;
        if (!passwordRegex.test(password)) {
            showError('–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –±—É–∫–≤—ã –∏ —Ü–∏—Ñ—Ä—ã, –º–∏–Ω–∏–º—É–º 6 —Å–∏–º–≤–æ–ª–æ–≤');
            return false;
        }
  
        return true;
    }
  
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω–ø—É—Ç–æ–≤
    nameInput.setAttribute('minlength', '3');
    nameInput.setAttribute('maxlength', '20');
    nameInput.setAttribute('pattern', '[A-Za-z–ê-–Ø–∞-—è0-9_]+');
    nameInput.setAttribute('title', '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –±—É–∫–≤—ã, —Ü–∏—Ñ—Ä—ã –∏ –Ω–∏–∂–Ω–µ–µ –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏–µ');
    nameInput.setAttribute('placeholder', '–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω');
    nameInput.setAttribute('autocomplete', 'off');
  
    passwordInput.setAttribute('minlength', '6');
    passwordInput.setAttribute('maxlength', '30');
    passwordInput.setAttribute('placeholder', '–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å');
    passwordInput.setAttribute('autocomplete', 'new-password');
  
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
    registerForm.addEventListener('submit', function(e) {
        e.preventDefault();
  
        // –í–∞–ª–∏–¥–∞—Ü–∏—è
        if (!validateInputs()) {
            return;
        }
  
        // –ë–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É
        submitButton.disabled = true;
        submitButton.textContent = '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è...';
  
        // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
        const registrationData = {
            username: nameInput.value.trim(),
            password: passwordInput.value
        };
  
        // –û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
        fetch('http://127.0.0.1:8000/register', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(registrationData)
        })
        .then(response => {
            if (!response.ok) {
                switch(response.status) {
                    case 409:
                        throw new Error('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º –ª–æ–≥–∏–Ω–æ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
                    case 400:
                        throw new Error('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ');
                    default:
                        throw new Error('–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏');
                }
            }
            return response.json();
        })
        .then(data => {
            // –£—Å–ø–µ—à–Ω–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
            alert('–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!');
            // –†–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞
            window.location.href = '/login.html';
        })
        .catch(error => {
            console.error('Registration Error:', error);
            showError(error.message);
        })
        .finally(() => {
            // –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É
            submitButton.disabled = false;
            submitButton.textContent = '–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è';
        });
    });
  
    // –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–∏–Ω–∞
    let usernameTimeout;
    nameInput.addEventListener('input', function() {
        clearTimeout(usernameTimeout);
        usernameTimeout = setTimeout(() => {
            const username = nameInput.value.trim();
            if (username.length >= 3) {
                // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –ª–æ–≥–∏–Ω–∞
                fetch(`/api/check-username?username=${username}`)
                    .then(response => response.json())
                    .then(data => {
                        if (!data.available) {
                            showError('–≠—Ç–æ—Ç –ª–æ–≥–∏–Ω —É–∂–µ –∑–∞–Ω—è—Ç');
                        }
                    })
                    .catch(error => {
                        console.error('Username check error:', error);
                    });
            }
        }, 500);
    });
  
    // –ü–æ–∫–∞–∑/—Å–∫—Ä—ã—Ç–∏–µ –ø–∞—Ä–æ–ª—è
    const togglePasswordBtn = document.createElement('button');
    togglePasswordBtn.type = 'button';
    togglePasswordBtn.textContent = 'üëÅÔ∏è';
    togglePasswordBtn.style.cssText = `
        font-size: 20px;
        position: absolute;
        right: 10px;
        top: 50%;
        transform: translateY(-50%);
        background: none;
        border: none;
        cursor: pointer;
        z-index: 10;
    `;
    
    const passwordWrapper = passwordInput.closest('.form-group');
    passwordWrapper.style.position = 'relative';
    passwordWrapper.appendChild(togglePasswordBtn);
  
    togglePasswordBtn.addEventListener('click', function() {
        if (passwordInput.type === 'password') {
            passwordInput.type = 'text';
            togglePasswordBtn.textContent = 'üôà';
        } else {
            passwordInput.type = 'password';
            togglePasswordBtn.textContent = 'üëÅÔ∏è';
        }
    });
});
